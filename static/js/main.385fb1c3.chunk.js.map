{"version":3,"sources":["components/TopPanel.jsx","actions/action-constant.js","actions/event-actions.js","views/EventView.jsx","views/EventSearchView.jsx","views/EventListView.jsx","components/Footer.jsx","views/EventForm.jsx","views/EventTimelineView.jsx","App.js","serviceWorker.js","stores/Store.js","reducers/eventReducer.js","index.js"],"names":["TopPanel","react_default","a","createElement","AppBar_default","position","Toolbar_default","IconButton_default","color","aria-label","Code_default","Typography_default","variant","React","Component","ADD_EVENT","FETCH_EVENT","DELETE_EVENT","SEARCH_EVENT","nextId","deleteEvent","id","type","payload","EventView","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDelete","e","dispatch","event","chips","open","style","ListItem_default","ListItemAvatar_default","Avatar_default","index_es","ListItemText_default","primary","title","secondary","ListItemSecondaryAction_default","onClick","bind","Delete_default","connect","EventSearchView","clear","setState","query","state","_this2","margin","core_index_es","fullWidth","label","name","onKeyDown","keyCode","target","value","EventListView","views_EventSearchView","List_default","events","map","item","views_EventView","key","Date","end","now","fetchEvent","Footer","handleChange","console","log","history","push","classes","BottomNavigation_default","onChange","showLabels","className","root","BottomNavigationAction_default","handleNav","icon","Schedule_default","CalendarToday_default","AddAlarm_default","withRouter","withStyles","width","bottom","background","EventForm","defineProperty","doToast","openSnackbar","closeSnackbar","reason","description","start","preventDefault","Grid_default","xs","Paper_default","paper","container","noValidate","autoComplete","onSubmit","handleSave","TextField_default","textField","multiline","rows","defaultValue","InputLabelProps","shrink","button","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","handleClose","ContentProps","aria-describedby","message","action","Close_default","theme","display","flexWrap","marginLeft","spacing","unit","marginRight","menu","padding","EventTimelineView","dist_es6","el","date","iconStyle","Work_default","App","BrowserRouter","justify","components_TopPanel","Route","exact","path","component","components_Footer","flexGrow","textAlign","palette","text","Boolean","window","location","hostname","match","Store","createStore","arguments","length","undefined","filter","q","ReactDOM","render","es","store","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.385fb1c3.chunk.js","sourcesContent":["import React from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CodeIcon from '@material-ui/icons/Code'\r\n\r\nclass TopPanel extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton color=\"inherit\" aria-label=\"Menu\">\r\n                        <CodeIcon/>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" color=\"inherit\" >\r\n                        REDUX REACT CRUD without U :)\r\n                </Typography>\r\n                <IconButton color=\"inherit\" aria-label=\"Menu\">\r\n                        <CodeIcon/>\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TopPanel","export const ADD_EVENT='ADD_EVENT';\r\nexport const EDIT_EVENT='EDIT_EVENT';\r\nexport const FETCH_EVENT='FETCH_EVENT';\r\nexport const DELETE_EVENT='DELETE_EVENT';\r\nexport const SEARCH_EVENT='SEARCH_EVENT';\r\n","import { ADD_EVENT, FETCH_EVENT, DELETE_EVENT } from \"./action-constant\";\r\nlet nextId=1\r\nexport const addEvent=(title,description,start,end)=>{\r\n    nextId++;\r\n    return {\r\n        type:ADD_EVENT,\r\n        payload:{\r\n            id:nextId,\r\n            title,\r\n            description,\r\n            start,\r\n            end\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchEvent=()=>{\r\n    return {\r\n        type:FETCH_EVENT,\r\n        payload:{}\r\n    }\r\n}\r\n\r\nexport const deleteEvent=(id)=>{\r\n    return {\r\n        type:DELETE_EVENT,\r\n        payload:{\r\n            id\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {CalendarToday} from '@material-ui/icons/';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { deleteEvent } from '../actions/event-actions';\r\nimport {connect} from 'react-redux'\r\nclass EventView extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.event=props.event;\r\n    }\r\n\r\n    handleDelete=(e)=>{\r\n        this.props.dispatch(deleteEvent(this.event.id))\r\n    }\r\n    render(){\r\n        let chips;\r\n        if(this.props.open){\r\n            chips=<span style={{color:'green'}}>Open</span>\r\n        }else{\r\n            chips=<span style={{color:'gray'}}>Close</span>\r\n        }\r\n        return(\r\n            <ListItem>\r\n                <ListItemAvatar>\r\n                    <Avatar>\r\n                        <CalendarToday />\r\n                    </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                    primary={this.event.title}\r\n                    secondary={chips}\r\n                />\r\n                <ListItemSecondaryAction>\r\n                    <IconButton aria-label=\"Delete\" onClick={this.handleDelete.bind(this)}>\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect()(EventView);","import React from 'react'\r\nimport { TextField } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { SEARCH_EVENT } from '../actions/action-constant';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass EventSearchView extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            query:''\r\n        }\r\n    }\r\n    clear=()=>{\r\n        this.setState({\r\n            query:''\r\n        })\r\n    }\r\n    render(){\r\n        return (\r\n            <div style={{margin: 10}}>\r\n                <TextField\r\n                    fullWidth\r\n                    label=\"Search here\"\r\n                    name=\"search\"\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    onKeyDown={(e) => {\r\n                        if (e.keyCode == 13) {\r\n                            this.props.dispatch({\r\n                                type:SEARCH_EVENT,\r\n                                payload:e.target.value\r\n                            })\r\n                        }\r\n                        this.clear()\r\n                    }}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null,null)(EventSearchView)\r\n","import React from 'react';\r\nimport List from '@material-ui/core/List'\r\nimport { connect } from 'react-redux';\r\nimport EventView from './EventView';\r\nimport PropTypes from 'prop-types';\r\nimport { Paper } from '@material-ui/core';\r\nimport { FETCH_EVENT } from '../actions/action-constant';\r\nimport EventSearchView from './EventSearchView';\r\n\r\nclass EventListView extends React.Component {\r\n\r\n    componentDidMount() {\r\n        // this.props.fetchEvent()\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <Paper>\r\n                <br />\r\n                <EventSearchView />\r\n                <List>\r\n                    {this.props.events.map(item => \r\n                        <EventView key={item.id} event={item} open={new Date(item.end)<Date.now()}/>\r\n                    )\r\n                    }\r\n\r\n                </List>\r\n            </Paper>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    events: state\r\n})\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchEvent: () => dispatch({ type: FETCH_EVENT, payload: null })\r\n})\r\nEventListView.propTypes = {\r\n    events: PropTypes.array.isRequired\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EventListView);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport CalenderTodayIcon from '@material-ui/icons/CalendarToday';\r\nimport ScheduleIcon from '@material-ui/icons/Schedule';\r\nimport AddAlarmIcon from '@material-ui/icons/AddAlarm';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nconst styles = {\r\n    root: {\r\n        width: '100%',\r\n        position: 'fixed',\r\n        bottom: 0,\r\n        background:'#f50057',\r\n    },\r\n};\r\n\r\nclass Footer extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        console.log(props)\r\n    }\r\n    state = {\r\n        value: 0,\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    handleNav(e) {\r\n        switch (e.target.name) {\r\n            case 'new-event-nav':\r\n                this.props.history.push('/new-event');\r\n                break;\r\n                case 'events-nav':\r\n                this.props.history.push('/');\r\n                break;\r\n                case 'timeline-nav':\r\n                this.props.history.push('/timeline');\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { value } = this.state;\r\n\r\n        return (\r\n            <BottomNavigation\r\n                value={value}\r\n                onChange={this.handleChange}\r\n                showLabels\r\n                className={classes.root}\r\n            >\r\n                <BottomNavigationAction onClick={this.handleNav.bind(this)} name=\"timeline-nav\" label=\"Timeline\" icon={<ScheduleIcon />} />\r\n                <BottomNavigationAction onClick={this.handleNav.bind(this)} name=\"events-nav\" label=\"Events\" icon={<CalenderTodayIcon />} />\r\n                <BottomNavigationAction onClick={this.handleNav.bind(this)} name=\"new-event-nav\" label=\"New\" icon={<AddAlarmIcon />} />\r\n            </BottomNavigation>\r\n        );\r\n    }\r\n}\r\n\r\nFooter.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withRouter(withStyles(styles)(Footer));","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Button, Typography ,IconButton,Snackbar} from '@material-ui/core/';\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport { connect } from 'react-redux';\r\nimport { addEvent } from '../actions/event-actions';\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    },\r\n    paper: {\r\n        padding: 20,\r\n        margin: 20\r\n    },\r\n    button: {\r\n        margin: theme.spacing.unit,\r\n    }\r\n});\r\n\r\n\r\nclass EventForm extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            description: '',\r\n            start: Date.now,\r\n            end: Date.now,\r\n            openSnackbar:false\r\n        };\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n    handleSave(event) {\r\n        event.preventDefault()\r\n        this.props.dispatch(addEvent(\r\n            this.state.title,\r\n            this.state.description,\r\n            this.state.start,\r\n            this.state.end\r\n        ));\r\n        this.setState({\r\n            title: '',\r\n            description: '',\r\n            start: \"\",\r\n            end: \"\",\r\n        });\r\n        this.doToast()\r\n    }\r\n\r\n    doToast=()=>{\r\n        this.setState({openSnackbar:true})\r\n    }\r\n\r\n    closeSnackbar = (event, reason) => {\r\n        console.log(\"close snack\")\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        this.setState({ openSnackbar: false });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Grid item xs={12}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant=\"h5\">New Event</Typography>\r\n                    <form className={classes.container} noValidate autoComplete=\"off\" onSubmit={this.handleSave.bind(this)}>\r\n\r\n                        <TextField\r\n                            id=\"title\"\r\n                            label=\"Title\"\r\n                            className={classes.textField}\r\n                            type=\"text\"\r\n                            name=\"title\"\r\n                            value={this.state.title}\r\n                            fullWidth\r\n                            autoComplete=\"email\"\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            onChange={this.handleChange.bind(this)}\r\n                        />\r\n                        <TextField\r\n                            id=\"description\"\r\n                            label=\"Description\"\r\n                            multiline\r\n                            name=\"description\"\r\n                            rows=\"4\"\r\n                            value={this.state.description}\r\n                            fullWidth\r\n                            className={classes.textField}\r\n                            margin=\"normal\"\r\n                            variant=\"outlined\"\r\n                            onChange={this.handleChange.bind(this)}\r\n                        />\r\n                        <TextField\r\n                            id=\"start-at\"\r\n                            name=\"start\"\r\n                            label=\"Start at\"\r\n                            type=\"date\"\r\n                            value={this.state.start}\r\n                            defaultValue=\"2017-05-24T10:30\"\r\n                            className={classes.textField}\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            variant=\"outlined\"\r\n                            onChange={this.handleChange.bind(this)}\r\n\r\n                        />\r\n                        <TextField\r\n                            name=\"end\"\r\n                            id=\"end-at\"\r\n                            label=\"End at\"\r\n                            type=\"date\"\r\n                            value={this.state.end}\r\n                            className={classes.textField}\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            variant=\"outlined\"\r\n                            onChange={this.handleChange.bind(this)}\r\n                        />\r\n\r\n                        <Button type=\"submit\" className={classes.button}  variant=\"contained\" color=\"primary\">Save</Button>\r\n\r\n                        <Button type=\"reset\" className={classes.button} variant=\"contained\" color=\"secondary\">Reset</Button>\r\n\r\n                        <Snackbar\r\n                            anchorOrigin={{\r\n                                vertical: 'bottom',\r\n                                horizontal: 'left',\r\n                            }}\r\n                            open={this.state.openSnackbar}\r\n                            autoHideDuration={3000}\r\n                            onClose={this.handleClose}\r\n                            ContentProps={{\r\n                                'aria-describedby': 'message-id',\r\n                            }}\r\n                            message={<span id=\"message-id\">New Event is Created</span>}\r\n                            action={[\r\n                                <IconButton\r\n                                    key=\"close\"\r\n                                    aria-label=\"Close\"\r\n                                    color=\"inherit\"\r\n                                    onClick={this.closeSnackbar}\r\n                                >\r\n                                    <CloseIcon />\r\n                                </IconButton>,\r\n                            ]}\r\n                        />\r\n                    </form>\r\n                </Paper>\r\n            </Grid>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nEventForm.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect(null, null)(withStyles(styles)(EventForm))\r\n","import { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\r\nimport 'react-vertical-timeline-component/style.min.css';\r\nimport WorkIcon from '@material-ui/icons/Work'\r\nimport React, { Component } from 'react'\r\nimport { Typography } from '@material-ui/core';\r\nimport {connect} from 'react-redux'\r\nclass EventTimelineView extends Component {\r\n\r\n    render() {\r\n        return (\r\n            < VerticalTimeline>\r\n                {this.props.events.map(el => <VerticalTimelineElement\r\n                    className=\"vertical-timeline-element--work\"\r\n                    date={el.start}\r\n                    iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\r\n                    icon={<WorkIcon />}\r\n                >\r\n                    <Typography variant=\"h4\">{el.title}</Typography>\r\n                    <Typography variant=\"p\">{el.description}</Typography>\r\n                    <h3 className=\"vertical-timeline-element-title\">Art Director</h3>\r\n                </VerticalTimelineElement>\r\n                )}\r\n\r\n\r\n            </VerticalTimeline>\r\n\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  events:state\r\n})\r\n\r\nexport default connect(mapStateToProps,null)(EventTimelineView)\r\n\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TopPanel from './components/TopPanel';\nimport EventListView from './views/EventListView';\nimport Footer from './components/Footer';\nimport EventForm from './views/EventForm';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport EventTimelineView from './views/EventTimelineView';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n});\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    const { classes } = props;\n  }\n  render() {\n    return (\n      <Router>\n\n      {/* <div className={classes.root}> */}\n        <Grid container  justify=\"center\">\n          <Grid item xs>\n            <TopPanel/>\n            <br/>\n            <Route exact path=\"/\" component={EventListView}/>\n            <Route path=\"/new-event\" component={EventForm}/>\n            <Route path=\"/timeline\" component={EventTimelineView}/>\n             <Footer/>\n          </Grid>\n\n        </Grid>\n        \n     {/* </div> */}\n      </Router>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {createStore} from 'redux';\r\nimport { eventReducer } from '../reducers/eventReducer';\r\n\r\nconst Store=createStore(eventReducer)\r\n\r\nexport default Store;","import { ADD_EVENT, FETCH_EVENT, DELETE_EVENT, SEARCH_EVENT } from \"../actions/action-constant\";\r\n\r\n\r\nvar initialState = {\r\n    events: []\r\n}\r\nexport function eventReducer(state = [], action) {\r\n    switch (action.type) {\r\n        case ADD_EVENT:\r\n            console.log(\"Add event\");\r\n            state.push(action.payload)\r\n            return state;\r\n        case FETCH_EVENT:\r\n            console.log(\"fetch event\")\r\n            return state;\r\n        case DELETE_EVENT:\r\n            console.log(\"delete event\")\r\n            return state.filter(item => item.id !== action.payload.id)\r\n        case SEARCH_EVENT:\r\n            console.log(\"search event\");\r\n            const q=action.payload;\r\n            return state.filter(item=>item.title.match(q))\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Store from './stores/Store';\nimport {Provider} from 'react-redux'\n\nReactDOM.render(\n    <Provider store={Store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}